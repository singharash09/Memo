{"ast":null,"code":"var _jsxFileName = \"/Users/arashsingh/Documents/Software/Memo/src/components/CreateNote.jsx\";\nimport React, { useState } from \"react\"; //This is the area where the user inputs a new note \n\nfunction CreateNote(props) {\n  //stateful JSON object newNote (using hooks) to dynamically change value in HTML\n  const [newNote, setNewNote] = setState({\n    title: \"\",\n    content: \"\"\n  }); //submit note to App.jsx\n\n  function submitNote(event) {\n    props.onAdd(note); //passing over the current created note to App.jsx function\n\n    event.preventDefault(); //avoid \n  } //update the value of the new note\n\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target; //deconstruction event object to get name and value attribute\n\n    setNewNote(prevNote => {\n      return { ...prevNote,\n        //spread operator\n        [name]: value //tapping into the value of name \n\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: newNote.title,\n    placeholde: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: handleChange,\n    value: newNote.content,\n    placeholder: \"Write a description...\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"buuton\", {\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"+\")));\n}\n\nexport default CreateNote;","map":{"version":3,"sources":["/Users/arashsingh/Documents/Software/Memo/src/components/CreateNote.jsx"],"names":["React","useState","CreateNote","props","newNote","setNewNote","setState","title","content","submitNote","event","onAdd","note","preventDefault","handleChange","name","value","target","prevNote"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC;AACnCC,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,OAAO,EAAE;AAF0B,GAAD,CAAtC,CAHuB,CAQvB;;AACA,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBP,IAAAA,KAAK,CAACQ,KAAN,CAAYC,IAAZ,EADuB,CACJ;;AACnBF,IAAAA,KAAK,CAACG,cAAN,GAFuB,CAEC;AAC3B,GAZsB,CAcvB;;;AACA,WAASC,YAAT,CAAsBJ,KAAtB,EAA6B;AAC7B,UAAM;AAACK,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBN,KAAK,CAACO,MAA5B,CAD6B,CACQ;;AACrCZ,IAAAA,UAAU,CAACa,QAAQ,IAAG;AAClB,aAAO,EACH,GAAGA,QADA;AACU;AACb,SAACH,IAAD,GAAQC,KAFL,CAEW;;AAFX,OAAP;AAIH,KALS,CAAV;AAMH;;AAEI,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAEF,YAA9B;AAA4C,IAAA,KAAK,EAAEV,OAAO,CAACG,KAA3D;AAAkE,IAAA,UAAU,EAAC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAU,IAAA,IAAI,EAAC,SAAf;AAAyB,IAAA,QAAQ,EAAEO,YAAnC;AAAiD,IAAA,KAAK,EAAEV,OAAO,CAACI,OAAhE;AAAyE,IAAA,WAAW,EAAC,wBAArF;AAA8G,IAAA,IAAI,EAAC,GAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADJ,CADH;AASJ;;AAED,eAAeP,UAAf","sourcesContent":["import React, {useState} from \"react\";\n\n//This is the area where the user inputs a new note \nfunction CreateNote(props) {\n\n    //stateful JSON object newNote (using hooks) to dynamically change value in HTML\n    const [newNote, setNewNote] = setState({\n        title: \"\",\n        content: \"\"\n    });\n\n    //submit note to App.jsx\n    function submitNote(event) {\n        props.onAdd(note); //passing over the current created note to App.jsx function\n        event.preventDefault(); //avoid \n    }\n\n    //update the value of the new note\n    function handleChange(event) {\n    const {name, value} = event.target;  //deconstruction event object to get name and value attribute\n    setNewNote(prevNote =>{\n        return {\n            ...prevNote, //spread operator\n            [name]: value //tapping into the value of name \n        }\n    })\n}\n    \n     return (\n        <div>\n            <form>\n                <input name=\"title\" onChange={handleChange} value={newNote.title} placeholde=\"Title\"/>\n                <textarea name=\"content\" onChange={handleChange} value={newNote.content} placeholder=\"Write a description...\" rows=\"3\"/>\n                <buuton onClick={submitNote}>+</buuton>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}