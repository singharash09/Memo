{"ast":null,"code":"var _jsxFileName = \"/Users/arashsingh/Documents/Software/Memo/src/components/CreateNote.jsx\";\nimport React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom'; //This is the area where the user inputs a new note \n\nfunction CreateNote(props) {\n  //hook for expanding the textarea for animation\n  const [isExpanded, setExpanded] = useState(false); //stateful JSON object newNote (using hooks) to dynamically change value in HTML\n\n  const [newNote, setNewNote] = useState({\n    title: \"\",\n    content: \"\"\n  }); //submit note to App.jsx\n\n  function submitNote(event) {\n    props.onAdd(newNote); //passing over the current created note to App.jsx function\n\n    event.preventDefault(); //avoid default behavior\n\n    setNewNote({\n      title: \"\",\n      content: \"\"\n    }); //clear the form after submit\n  } //update the value of the new note\n\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target; //deconstruction event object to get name and value attribute\n\n    setNewNote(prevNote => {\n      return { ...prevNote,\n        //spread operator\n        [name]: value //tapping into the value of name \n\n      };\n    });\n  } //function to expand the textarea\n\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, isExpanded ? /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: newNote.title,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onClick: expand,\n    onChange: handleChange,\n    value: newNote.content,\n    placeholder: \"Note something...\",\n    rows: isExpanded ? 3 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: isExpanded ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: \"fab-button\",\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 66\n    }\n  })))));\n}\n\nexport default CreateNote;","map":{"version":3,"sources":["/Users/arashsingh/Documents/Software/Memo/src/components/CreateNote.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateNote","props","isExpanded","setExpanded","newNote","setNewNote","title","content","submitNote","event","onAdd","preventDefault","handleChange","name","value","target","prevNote","expand"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BP,QAAQ,CAAC,KAAD,CAA1C,CAHuB,CAKvB;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACnCU,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,OAAO,EAAE;AAF0B,GAAD,CAAtC,CANuB,CAWvB;;AACA,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBR,IAAAA,KAAK,CAACS,KAAN,CAAYN,OAAZ,EADuB,CACD;;AACtBK,IAAAA,KAAK,CAACE,cAAN,GAFuB,CAEC;;AACxBN,IAAAA,UAAU,CAAC;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAD,CAAV,CAHuB,CAGc;AACxC,GAhBsB,CAkBvB;;;AACA,WAASK,YAAT,CAAsBH,KAAtB,EAA6B;AAC7B,UAAM;AAACI,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBL,KAAK,CAACM,MAA5B,CAD6B,CACQ;;AACrCV,IAAAA,UAAU,CAACW,QAAQ,IAAG;AAClB,aAAO,EACH,GAAGA,QADA;AACU;AACb,SAACH,IAAD,GAAQC,KAFL,CAEW;;AAFX,OAAP;AAIH,KALS,CAAV;AAMH,GA3B0B,CA4BzB;;;AACC,WAASG,MAAT,GAAkB;AACdd,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAEC,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,UAAU,gBAAG;AACb,IAAA,IAAI,EAAC,OADQ;AAEb,IAAA,QAAQ,EAAEU,YAFG;AAGb,IAAA,KAAK,EAAER,OAAO,CAACE,KAHF;AAIb,IAAA,WAAW,EAAC,OAJC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAKL,IANT,eAQI;AACC,IAAA,IAAI,EAAC,SADN;AAEC,IAAA,OAAO,EAAEW,MAFV;AAGC,IAAA,QAAQ,EAAEL,YAHX;AAIC,IAAA,KAAK,EAAER,OAAO,CAACG,OAJhB;AAKC,IAAA,WAAW,EAAC,mBALb;AAMC,IAAA,IAAI,EAAEL,UAAU,GAAG,CAAH,GAAO,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAiBI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,UAAU,GAAG,IAAH,GAAU,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAEM,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjD,CADA,CAjBJ,CADJ,CADH;AAyBJ;;AAED,eAAeR,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\n\n//This is the area where the user inputs a new note \nfunction CreateNote(props) {\n\n    //hook for expanding the textarea for animation\n    const [isExpanded, setExpanded] = useState(false);\n\n    //stateful JSON object newNote (using hooks) to dynamically change value in HTML\n    const [newNote, setNewNote] = useState({\n        title: \"\",\n        content: \"\"\n    });\n\n    //submit note to App.jsx\n    function submitNote(event) {\n        props.onAdd(newNote); //passing over the current created note to App.jsx function\n        event.preventDefault(); //avoid default behavior\n        setNewNote({title: \"\", content: \"\"}) //clear the form after submit\n    }\n\n    //update the value of the new note\n    function handleChange(event) {\n    const {name, value} = event.target;  //deconstruction event object to get name and value attribute\n    setNewNote(prevNote =>{\n        return {\n            ...prevNote, //spread operator\n            [name]: value //tapping into the value of name \n        }\n    })\n}\n  //function to expand the textarea\n   function expand() {\n       setExpanded(true);\n   }\n    \n     return (\n        <div>\n            <form className=\"create-note\">\n               {isExpanded ? <input \n                name=\"title\" \n                onChange={handleChange} \n                value={newNote.title} \n                placeholder=\"Title\"\n                /> : null\n                } \n                <textarea\n                 name=\"content\"\n                 onClick={expand}\n                 onChange={handleChange}\n                 value={newNote.content} \n                 placeholder=\"Note something...\" \n                 rows={isExpanded ? 3 : 1}                 \n                 />\n\n                <Zoom in={isExpanded ? true : false}>\n                <Fab className=\"fab-button\" onClick={submitNote}><AddIcon/></Fab>\n                </Zoom>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}