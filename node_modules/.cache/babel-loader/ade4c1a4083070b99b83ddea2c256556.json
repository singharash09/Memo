{"ast":null,"code":"var _jsxFileName = \"/Users/arashsingh/Documents/Software/Memo/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateNote from \"./CreateNote\";\n\nfunction App() {\n  //array for keeping track of notes\n  const [notes, setNotes] = useState([]); //add new note to array\n\n  function addNote(note) {\n    setNotes(prevNotes => {\n      return [...prevNotes, note]; //adding the new note at the end of the array using the ES6 spread operator\n    });\n  } //delete a note from the array \n\n\n  function deleteNote(noteID) {\n    setNotes(prevNotes => {\n      prevNotes.filter((currentNote, index) => {\n        return;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CreateNote, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), notes.map(noteInArray => {\n    return /*#__PURE__*/React.createElement(Note, {\n      title: noteInArray.title,\n      content: noteInArray.content,\n      onDelete: noteInArray.deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/arashsingh/Documents/Software/Memo/src/components/App.jsx"],"names":["React","useState","Header","Footer","Note","CreateNote","App","notes","setNotes","addNote","note","prevNotes","deleteNote","noteID","filter","currentNote","index","map","noteInArray","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,GAAT,GAAe;AAEX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAHW,CAKX;;AACA,WAASQ,OAAT,CAAiBC,IAAjB,EAAuB;AACnBF,IAAAA,QAAQ,CAACG,SAAS,IAAI;AACnB,aAAQ,CAAC,GAAGA,SAAJ,EAAeD,IAAf,CAAR,CADmB,CACU;AAC/B,KAFO,CAAR;AAGH,GAVU,CAYX;;;AACA,WAASE,UAAT,CAAoBC,MAApB,EAA4B;AACxBL,IAAAA,QAAQ,CAACG,SAAS,IAAI;AAClBA,MAAAA,SAAS,CAACG,MAAV,CAAiB,CAACC,WAAD,EAAcC,KAAd,KAAyB;AACtC;AACH,OAFD;AAIH,KALO,CAAR;AAMH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,eAKH,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAIP,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALG,EAQFF,KAAK,CAACU,GAAN,CAAWC,WAAD,IAAgB;AACvB,wBAAO,oBAAC,IAAD;AACH,MAAA,KAAK,EAAIA,WAAW,CAACC,KADlB;AAEH,MAAA,OAAO,EAAID,WAAW,CAACE,OAFpB;AAGH,MAAA,QAAQ,EAAIF,WAAW,CAACN,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH,GANA,CARE,eAiBH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBG,CAAP;AAmBH;;AAED,eAAeN,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateNote from \"./CreateNote\";\n\n\nfunction App() {\n\n    //array for keeping track of notes\n    const [notes, setNotes] = useState([]);\n\n    //add new note to array\n    function addNote(note) {\n        setNotes(prevNotes => {\n           return  [...prevNotes, note] //adding the new note at the end of the array using the ES6 spread operator\n        })\n    }\n\n    //delete a note from the array \n    function deleteNote(noteID) {\n        setNotes(prevNotes => {\n            prevNotes.filter((currentNote, index, )=> {\n                return\n            }\n            )\n        })\n    }\n\n    return <div>\n        {/* Header component */}\n        <Header />\n\n        {/* Create a new note area */}\n        <CreateNote onAdd = {addNote}/>\n\n        {/* For each note in the note array, create a new Note component for them */}\n        {notes.map((noteInArray) =>{\n            return <Note \n                title = {noteInArray.title}\n                content = {noteInArray.content}\n                onDelete = {noteInArray.deleteNote}\n            />\n        })}\n\n        {/* Footer component */}\n        <Footer />\n    </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}